{
  "test_cases": [
    {
      "id": "test_no_mfa",
      "description": "Basic query for users without MFA",
      "user_query": "Show me all users without MFA",
      "expected_sql": "SELECT UserID, Name, Email, Department FROM Users WHERE risk_topic = 'NO_MFA_USERS'",
      "expected_result": [
        {
          "UserID": 1,
          "Name": "John Doe",
          "Email": "john.doe@example.com",
          "Department": "IT"
        },
        {
          "UserID": 5,
          "Name": "Alice Smith",
          "Email": "alice.smith@example.com",
          "Department": "HR"
        }
      ]
    },
    {
      "id": "test_inactive_engineering",
      "description": "Find inactive engineering users",
      "user_query": "Show me all inactive users in the Engineering department",
      "expected_sql": "SELECT u.UserID, u.Name, u.Email, u.Department FROM Users u JOIN UserGroups ug ON u.UserID = ug.UserID JOIN Groups g ON ug.GroupID = g.GroupID WHERE u.risk_topic = 'INACTIVE_USERS' AND g.GroupName = 'Engineering'",
      "expected_result": [
        {
          "UserID": 3,
          "Name": "Bob Jackson",
          "Email": "bob.jackson@example.com",
          "Department": "Engineering"
        }
      ]
    },
    {
      "id": "test_service_accounts_admin",
      "description": "Find service accounts with admin privileges",
      "user_query": "List all service accounts that have admin permissions",
      "expected_sql": "SELECT u.UserID, u.Name, u.Email FROM Users u JOIN UserRoles ur ON u.UserID = ur.UserID JOIN Roles r ON ur.RoleID = r.RoleID WHERE u.risk_topic = 'SERVICE_ACCOUNTS' AND r.RoleName = 'Admin'",
      "expected_result": [
        {
          "UserID": 8,
          "Name": "CI/CD Service",
          "Email": "cicd@example.com"
        },
        {
          "UserID": 10,
          "Name": "Backup Service",
          "Email": "backup@example.com"
        }
      ]
    },
    {
      "id": "test_weak_mfa_financial",
      "description": "Find users with weak MFA who have access to financial systems",
      "user_query": "Who has weak MFA and access to the Finance System?",
      "expected_sql": "SELECT DISTINCT u.UserID, u.Name, u.Email, u.Department FROM Users u JOIN UserApplications ua ON u.UserID = ua.UserID JOIN Applications a ON ua.ApplicationID = a.ApplicationID WHERE u.risk_topic = 'WEAK_MFA_USERS' AND a.ApplicationName = 'Financial System'",
      "expected_result": [
        {
          "UserID": 4,
          "Name": "Carol Williams",
          "Email": "carol.williams@example.com",
          "Department": "Finance"
        }
      ]
    },
    {
      "id": "test_count_by_risk",
      "description": "Count users by risk category",
      "user_query": "Give me a count of users by risk category",
      "expected_sql": "SELECT risk_topic, COUNT(*) as user_count FROM Users WHERE risk_topic IS NOT NULL GROUP BY risk_topic ORDER BY user_count DESC",
      "expected_result": [
        {
          "risk_topic": "NO_MFA_USERS",
          "user_count": 25
        },
        {
          "risk_topic": "WEAK_MFA_USERS",
          "user_count": 18
        },
        {
          "risk_topic": "INACTIVE_USERS",
          "user_count": 14
        },
        {
          "risk_topic": "SERVICE_ACCOUNTS",
          "user_count": 10
        },
        {
          "risk_topic": "LOCAL_ACCOUNTS",
          "user_count": 8
        },
        {
          "risk_topic": "NEVER_LOGGED_IN_USERS",
          "user_count": 6
        },
        {
          "risk_topic": "PARTIALLY_OFFBOARDED_USERS",
          "user_count": 4
        },
        {
          "risk_topic": "RECENTLY_JOINED_USERS",
          "user_count": 3
        }
      ]
    },
    {
      "id": "test_local_accounts_system_access",
      "description": "Find local accounts with specific system access",
      "user_query": "Which local accounts have access to the Customer Database?",
      "expected_sql": "SELECT u.UserID, u.Name, u.Email FROM Users u JOIN UserApplications ua ON u.UserID = ua.UserID JOIN Applications a ON ua.ApplicationID = a.ApplicationID WHERE u.risk_topic = 'LOCAL_ACCOUNTS' AND a.ApplicationName = 'Customer Database'",
      "expected_result": [
        {
          "UserID": 12,
          "Name": "DB Admin",
          "Email": "dbadmin@example.com"
        }
      ]
    },
    {
      "id": "test_partially_offboarded",
      "description": "Find users who still have access after supposed offboarding",
      "user_query": "Show me all partially offboarded users who still have access to sensitive applications",
      "expected_sql": "SELECT DISTINCT u.UserID, u.Name, u.Email, a.ApplicationName FROM Users u JOIN UserApplications ua ON u.UserID = ua.UserID JOIN Applications a ON ua.ApplicationID = a.ApplicationID WHERE u.risk_topic = 'PARTIALLY_OFFBOARDED_USERS' AND a.ApplicationName IN ('Financial System', 'HR System', 'Customer Database')",
      "expected_result": [
        {
          "UserID": 15,
          "Name": "David Chen",
          "Email": "david.chen@example.com",
          "ApplicationName": "Customer Database"
        },
        {
          "UserID": 16,
          "Name": "Emily Brown",
          "Email": "emily.brown@example.com",
          "ApplicationName": "HR System"
        }
      ]
    },
    {
      "id": "test_joined_never_logged_in",
      "description": "Find recently joined users who have never logged in",
      "user_query": "Show me users who recently joined but have never logged in",
      "expected_sql": "SELECT u.UserID, u.Name, u.Email, u.Department FROM Users u WHERE u.risk_topic = 'RECENTLY_JOINED_USERS' AND u.risk_topic = 'NEVER_LOGGED_IN_USERS'",
      "expected_result": [
        {
          "UserID": 22,
          "Name": "Frank Thomas",
          "Email": "frank.thomas@example.com",
          "Department": "Sales"
        }
      ]
    }
  ]
} 